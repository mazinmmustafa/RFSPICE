// Output File
ofstream file("FF/C0Matrix.dat");

// Constants
real eps0= 8.85418781280000E-12;
int NCond=2;

// Plane 0
real W= 9.01812687036504E-02;
real H= 5.01007048353613E-03;

// Conductor 1
real x1=-6.35000000000000E-04;
real y1= 1.00000000000000E-02;
real r1= 1.90500000000000E-04;

// Conductor 2
real x2= 6.35000000000000E-04;
real y2= 1.00000000000000E-02;
real r2= 1.90500000000000E-04;

// Domain
real rd= 5.01007048353613E-02;

// Mesh Resolution
real NsAir=200;
real NsCond=200;

// Mesh
border C01(t=-W/2.0, +W/2.0){x=t; y=-H;}
border C02(t=-H, 0){x=W/2.0; y=t;}
border C03(t=-W/2.0, +W/2.0){x=-t; y=0;}
border C04(t=0, H){x=-W/2.0; y=-t;}
border C1(t=0, 2*pi) {x=x1+r1*cos(t); y=y1+r1*sin(t);}
border C2(t=0, 2*pi) {x=x2+r2*cos(t); y=y2+r2*sin(t);}
border Cd(t=0, 2*pi){x=rd*cos(t); y=rd*sin(t);}
mesh Th=buildmesh(Cd(NsAir)+C01(-NsCond)+C02(-NsCond)+C03(-NsCond)+C04(-NsCond)
	+C1(-NsCond)
	+C2(-NsCond)
	);

// Solver
fespace Vh(Th,P2);
Vh u, v;
Vh eps = eps0;
real Q;

// BCs Vector
matrix<real> Vm;
Vm.resize(NCond, 1);

// For Loop
for(int i=0; i<NCond; i++){
	for(int j=0; j<NCond; j++){
		for(int k=0; k<NCond; k++){if(k==i){Vm(k,0)=+0.5;}else{Vm(k,0)=-0.5;}}
			solve V(u, v)=int2d(Th)(eps*(dx(u)*dx(v)+dy(u)*dy(v)))
			+on(C01, u=-0.5)
			+on(C02, u=-0.5)
			+on(C03, u=-0.5)
			+on(C04, u=-0.5)
			+on(C1, u=Vm(0, 0))
			+on(C2, u=Vm(1, 0));
			if (j==0)
				{Q=int1d(Th, C1)(eps*(N.x*dx(u)+N.y*dy(u)));}
			else if (j==1)
				{Q=int1d(Th, C2)(eps*(N.x*dx(u)+N.y*dy(u)));}
			file << Q << " ";
		}
		file << endl;
}

exit(0);